

{
  "itemIdentifier": "ogc.api.records.schemas.recordGeoJSON",
  "name": "Schema for recordGeoJSON",
  "status": "under-development",
  "dateTimeAddition": "2024-01-23T12:40:00+01:00",
  "itemClass": "schema",
  "register": "ogcapi-records",
  "version": "0.1",
  "dateOfLastChange": "2024-04-23",
  "sources": [
    {
      "title": "OGC API Records - Draft",
      "link": "https://docs.ogc.org/DRAFTS/20-004.html"
    }
  ],
  "tags": [
    "ogcapi-records",
    "records"
  ],
  "schema": {
    "application/yaml": "https://ogcincubator.github.io/bblocks-ogcapi-records/build/annotated/api/records/schemas/recordGeoJSON/schema.yaml",
    "application/json": "https://ogcincubator.github.io/bblocks-ogcapi-records/build/annotated/api/records/schemas/recordGeoJSON/schema.json"
  },
  "abstract": "This building block corresponds to the schema for an OGC API Records recordGeoJSON",
  "shaclRules": {},
  "dependsOn": [
    "ogc.api.records.schemas.language",
    "ogc.api.records.schemas.linkTemplate",
    "ogc.api.records.schemas.theme",
    "ogc.api.records.schemas.license",
    "ogc.api.records.schemas.contact",
    "ogc.api.records.schemas.time"
  ],
  "sourceSchema": "https://github.com/opengeospatial/ogcapi-records/raw/master/core/openapi/schemas/recordGeoJSON.yaml",
  "sourceFiles": "https://ogcincubator.github.io/bblocks-ogcapi-records/_sources/schemas/recordGeoJSON/",
  "validationPassed": true,
  "annotatedSchema": "type: object\nrequired:\n- id\n- type\n- geometry\n- properties\n- links\nproperties:\n  id:\n    type: string\n    description: A unique identifier of the catalog record.\n    format: uri\n  conformsTo:\n    type: array\n    items:\n      type: string\n  type:\n    type: string\n    enum:\n    - Feature\n  time:\n    oneOf:\n    - enum:\n      - null\n    - $ref: https://ogcincubator.github.io/bblocks-ogcapi-records/build/annotated/api/records/schemas/time/schema.yaml\n  geometry:\n    oneOf:\n    - enum:\n      - null\n    - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/schemas/geometryGeoJSON.yaml\n  properties:\n    type: object\n    required:\n    - type\n    - title\n    properties:\n      created:\n        type: string\n        description: Date of creation of this record.\n        format: date-time\n      updated:\n        type: string\n        description: The most recent date on which the record was changed.\n        format: date-time\n      type:\n        type: string\n        description: The nature or genre of the resource. The value should be a code,\n          convenient for filtering records. Where available, a link to the canonical\n          URI of the record type resource will be added to the 'links' property.\n        maxLength: 64\n      title:\n        type: string\n        description: A human-readable name given to the resource.\n      description:\n        type: string\n        description: A free-text account of the resource.\n      keywords:\n        type: array\n        description: The topic or topics of the resource. Typically represented using\n          free-form keywords, tags, key phrases, or classification codes.\n        items:\n          type: string\n      language:\n        description: The language used for textual values in this record representation.\n        $ref: https://ogcincubator.github.io/bblocks-ogcapi-records/build/annotated/api/records/schemas/language/schema.yaml\n      languages:\n        type: array\n        description: This list of languages in which this record is available.\n        items:\n          $ref: https://ogcincubator.github.io/bblocks-ogcapi-records/build/annotated/api/records/schemas/language/schema.yaml\n      resourceLanguages:\n        type: array\n        description: The list of languages in which the resource described by this\n          record is available.\n        items:\n          $ref: https://ogcincubator.github.io/bblocks-ogcapi-records/build/annotated/api/records/schemas/language/schema.yaml\n      externalIds:\n        type: array\n        description: An identifier for the resource assigned by an external (to the\n          catalog) entity.\n        items:\n          type: object\n          properties:\n            scheme:\n              type: string\n              description: A reference to an authority or identifier for a knowledge\n                organization system from which the external identifier was obtained.\n                It is recommended that the identifier be a resolvable URI.\n            value:\n              type: string\n              description: The value of the identifier.\n          required:\n          - value\n      themes:\n        type: array\n        description: A knowledge organization system used to classify the resource.\n        minItems: 1\n        items:\n          $ref: https://ogcincubator.github.io/bblocks-ogcapi-records/build/annotated/api/records/schemas/theme/schema.yaml\n      formats:\n        type: array\n        description: A list of available distributions of the resource.\n        items:\n          type: string\n      contacts:\n        type: array\n        description: A list of contacts qualified by their role(s) in association\n          to the record or the resource described by the record.\n        items:\n          $ref: https://ogcincubator.github.io/bblocks-ogcapi-records/build/annotated/api/records/schemas/contact/schema.yaml\n      license:\n        $ref: https://ogcincubator.github.io/bblocks-ogcapi-records/build/annotated/api/records/schemas/license/schema.yaml\n      rights:\n        type: string\n        description: A statement that concerns all rights not addressed by the license\n          such as a copyright statement.\n  links:\n    type: array\n    items:\n      $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/schemas/link.yaml\n  linkTemplates:\n    type: array\n    items:\n      $ref: https://ogcincubator.github.io/bblocks-ogcapi-records/build/annotated/api/records/schemas/linkTemplate/schema.yaml\n",
  "gitRepository": "https://github.com/ogcincubator/bblocks-ogcapi-records",
  "gitPath": "_sources/schemas/recordGeoJSON"
}