{
  "title": "Validation report for ogc.api.records.v1.schemas.recordGeoJSON - Schema for recordGeoJSON",
  "bblockName": "Schema for recordGeoJSON",
  "bblockId": "ogc.api.records.v1.schemas.recordGeoJSON",
  "generated": "2025-08-13T03:27:13.987447+00:00",
  "result": false,
  "items": [
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/v1/schemas/recordGeoJSON/tests/record-fail.json",
        "url": "https://ogcincubator.github.io/bblocks-ogcapi-records/_sources/v1/schemas/recordGeoJSON/tests/record-fail.json",
        "language": "json"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using record-fail.json from test resources"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "JSON_LD",
          "title": "JSON-LD",
          "entries": [
            {
              "op": "jsonld-uplift-error",
              "isError": true,
              "message": "Error found when uplifting JSON-LD: https://geo.woudc.org/ows?service=WMS&version=1.3.0&request=GetMap&crs={crs}&bbox={bbox}&layers=stations&width={width}&height={height}&format=image/png does not look like a valid URI, trying to serialize this will break.\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/api/records/v1/schemas/recordGeoJSON/example_1_1.json",
        "url": "https://ogcincubator.github.io/bblocks-ogcapi-records/build/tests/api/records/v1/schemas/recordGeoJSON/example_1_1.json",
        "exampleIndex": 1,
        "snippetIndex": 1,
        "language": "application/json",
        "sourceUrl": "https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/examples/json/record.json"
      },
      "result": false,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_1_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "example_1_1.jsonld",
              "isError": false,
              "message": "Output JSON-LD example_1_1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_1_1.ttl",
              "size": 78,
              "isError": false,
              "message": "Output Turtle example_1_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": false,
              "exception": "ValidationError",
              "errorMessage": "{'name': 'TEXT', 'mediaType': 'text/plain'} is not of type 'string'",
              "isError": true,
              "message": "ValidationError: {'name': 'TEXT', 'mediaType': 'text/plain'} is not of type 'string'\n\nFailed validating 'type' in schema['properties']['properties']['properties']['formats']['items']:\n    {'type': 'string'}\n\nOn instance['properties']['formats'][0]:\n    {'mediaType': 'text/plain', 'name': 'TEXT'}"
            }
          ]
        }
      ]
    }
  ],
  "globalErrors": {},
  "counts": {
    "total": 2,
    "passed": 1,
    "failed": 1
  }
}